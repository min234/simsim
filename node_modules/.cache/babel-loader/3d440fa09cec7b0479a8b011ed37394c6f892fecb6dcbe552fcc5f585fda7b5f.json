{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\min\\\\Desktop\\\\\\uD1A0\\uD1A0\\\\front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Naver from './Navbar/index';\nimport Home from './Home/index';\nimport Memo from './Memo';\nimport Loading from './Loading';\nimport { Routes, Route, Link } from 'react-router-dom';\nimport Login from './Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(true);\n\n  // const mainApi = async () => {\n  //   setLoading(true); // api 호출 전에 true로 변경하여 로딩화면 띄우기\n  // try {\n  //   const response = await fetch(`http://localhost:5000/api/notes`, {\n  //   method: 'POST',\n  //   headers: {\n  //     'Content-Type': 'application/json',\n  // },\n  // body: JSON.stringify(loading),\n  // });\n\n  // const result = await response.json();\n  // console.log('mainData', result);\n  // setLoading(false); // api 호출 완료 됐을 때 false로 변경하려 로딩화면 숨김처리\n  // } catch (error) {\n  // window.alert(error);\n  // }\n  // };\n\n  // useEffect(() => {\n  // mainApi();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(Naver, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/memo/*\",\n          element: /*#__PURE__*/_jsxDEV(Memo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PE/a08i2rGxVV3v80gINDVF922g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Naver","Home","Memo","Loading","Routes","Route","Link","Login","jsxDEV","_jsxDEV","App","_s","loading","setLoading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/min/Desktop/토토/front/src/App.js"],"sourcesContent":["import './App.css';\nimport React ,{useState,useEffect}from 'react';\nimport Naver from './Navbar/index';\nimport Home from './Home/index';\nimport Memo from './Memo';\nimport Loading from './Loading';\nimport { Routes, Route, Link } from 'react-router-dom';\nimport Login from './Login';\n\n\nfunction App() {\n  const [loading,setLoading] = useState(true);\n\n  // const mainApi = async () => {\n  //   setLoading(true); // api 호출 전에 true로 변경하여 로딩화면 띄우기\n  // try {\n  //   const response = await fetch(`http://localhost:5000/api/notes`, {\n  //   method: 'POST',\n  //   headers: {\n  //     'Content-Type': 'application/json',\n  // },\n  // body: JSON.stringify(loading),\n  // });\n  \n  // const result = await response.json();\n  // console.log('mainData', result);\n  // setLoading(false); // api 호출 완료 됐을 때 false로 변경하려 로딩화면 숨김처리\n  // } catch (error) {\n  // window.alert(error);\n  // }\n  // };\n  \n  // useEffect(() => {\n  // mainApi();\n  // }, []);\n  \n  return (\n    <div className='header'>\n      <Naver />\n      \n      <div className='body'>\n        \n        {/* {loading ?<Loading/>: null}  */}\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/memo/*\" element={<Memo />} />\n          <Route path=\"/login\" element={<Login/>}/>\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAGC,QAAQ,EAACC,SAAS,QAAM,OAAO;AAC9C,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AACtD,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAE3C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACEW,OAAA;IAAKK,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBN,OAAA,CAACT,KAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAETV,OAAA;MAAKK,SAAS,EAAC,MAAM;MAAAC,QAAA,eAGnBN,OAAA,CAACL,MAAM;QAAAW,QAAA,gBACLN,OAAA,CAACJ,KAAK;UAACe,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEZ,OAAA,CAACR,IAAI;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrCV,OAAA,CAACJ,KAAK;UAACe,IAAI,EAAC,SAAS;UAACC,OAAO,eAAEZ,OAAA,CAACP,IAAI;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3CV,OAAA,CAACJ,KAAK;UAACe,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAEZ,OAAA,CAACF,KAAK;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACR,EAAA,CAzCQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}