{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\min\\\\Desktop\\\\\\uD1A0\\uD1A0\\\\front\\\\src\\\\Sadari\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = ({\n  data,\n  imgRefs\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [width, setWidth] = useState(0);\n  const [lines, setLines] = useState([]);\n  const [distance, setDistance] = useState(0);\n  useEffect(() => {\n    const updateCanvasSize = () => {\n      const containerWidth = document.querySelector('.contetnt').offsetWidth;\n      setWidth(containerWidth);\n    };\n    window.addEventListener('resize', updateCanvasSize);\n    updateCanvasSize();\n    return () => window.removeEventListener('resize', updateCanvasSize);\n  }, []);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const ladderWidth = canvas.width;\n    const ladderHeight = canvas.height;\n    const numPlayers = data.length;\n    const stepHeight = ladderHeight / (numPlayers + 3);\n    ctx.clearRect(0, 0, ladderWidth, ladderHeight);\n    ctx.strokeStyle = 'black';\n    ctx.lineWidth = 5;\n\n    // 수직선 그리기\n    data.forEach((playerData, index) => {\n      const img = imgRefs.current[index];\n      if (img) {\n        const imgX = img.offsetLeft + img.width / 6; // 상대적인 X 위치\n        if (firstX === null) {\n          firstX = imgX; // 첫 번째 수직선의 X 좌표 저장\n        } else if (secondX === null) {\n          secondX = imgX; // 두 번째 수직선의 X 좌표 저장\n        }\n        ctx.beginPath();\n        ctx.moveTo(imgX, 0);\n        ctx.lineTo(imgX, ladderHeight);\n        ctx.stroke();\n      }\n    });\n    ctx.strokeStyle = '#000';\n    ctx.lineWidth = 5;\n    lines.forEach(line => {\n      ctx.beginPath();\n      ctx.moveTo(line.x * (ladderWidth / width), line.y);\n      ctx.lineTo(ladderWidth, line.y);\n      ctx.stroke();\n    });\n  }, [data, imgRefs, width, lines]);\n  useEffect(() => {\n    const numPlayers = data.length;\n    const ladderHeight = 600;\n    const stepHeight = ladderHeight / (numPlayers + 3);\n    const newLines = [];\n    for (let i = 0; i < numPlayers + 4; i++) {\n      const lineY = Math.min((i + 1) * stepHeight, 580);\n      if (Math.random() > 0.5) {\n        data.forEach((_, index) => {\n          const img = imgRefs.current[index];\n          if (img) {\n            const imgX = img.offsetLeft + img.width / 6;\n            console.log(imgX);\n            newLines.push({\n              x: imgX,\n              y: lineY\n            });\n          }\n        });\n      }\n    }\n    console.log(newLines);\n    setLines(newLines);\n  }, [data, imgRefs]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: 600\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"53OA+jCHwtrA77r5FO4mc3YG+zc=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Canvas","data","imgRefs","_s","canvasRef","width","setWidth","lines","setLines","distance","setDistance","updateCanvasSize","containerWidth","document","querySelector","offsetWidth","window","addEventListener","removeEventListener","canvas","current","ctx","getContext","ladderWidth","ladderHeight","height","numPlayers","length","stepHeight","clearRect","strokeStyle","lineWidth","forEach","playerData","index","img","imgX","offsetLeft","firstX","secondX","beginPath","moveTo","lineTo","stroke","line","x","y","newLines","i","lineY","Math","min","random","_","console","log","push","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/min/Desktop/토토/front/src/Sadari/Canvas.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst Canvas = ({ data, imgRefs }) => {\r\n  const canvasRef = useRef(null);\r\n  const [width, setWidth] = useState(0);\r\n  const [lines, setLines] = useState([]); \r\n  const [distance,setDistance] = useState(0); \r\n\r\n  useEffect(() => {\r\n    const updateCanvasSize = () => {\r\n      const containerWidth = document.querySelector('.contetnt').offsetWidth;\r\n      setWidth(containerWidth);\r\n    };\r\n\r\n    window.addEventListener('resize', updateCanvasSize);\r\n    updateCanvasSize();\r\n\r\n    return () => window.removeEventListener('resize', updateCanvasSize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    const ladderWidth = canvas.width;\r\n    const ladderHeight = canvas.height;\r\n    const numPlayers = data.length;\r\n    const stepHeight = ladderHeight / (numPlayers + 3);\r\n\r\n    ctx.clearRect(0, 0, ladderWidth, ladderHeight);\r\n\r\n    ctx.strokeStyle = 'black';\r\n    ctx.lineWidth = 5;\r\n\r\n    // 수직선 그리기\r\n    data.forEach((playerData, index) => {\r\n      const img = imgRefs.current[index];\r\n      if (img) {\r\n        const imgX = img.offsetLeft + img.width / 6; // 상대적인 X 위치\r\n        if (firstX === null) {\r\n          firstX = imgX; // 첫 번째 수직선의 X 좌표 저장\r\n        } else if (secondX === null) {\r\n          secondX = imgX; // 두 번째 수직선의 X 좌표 저장\r\n        }\r\n        ctx.beginPath();\r\n        ctx.moveTo(imgX, 0);\r\n        ctx.lineTo(imgX, ladderHeight);\r\n        ctx.stroke();\r\n      }\r\n    });\r\n\r\n    \r\n    ctx.strokeStyle = '#000';\r\n    ctx.lineWidth = 5;\r\n\r\n    lines.forEach((line) => {\r\n      ctx.beginPath();\r\n      ctx.moveTo(line.x * (ladderWidth / width), line.y);\r\n      ctx.lineTo(ladderWidth, line.y);\r\n      ctx.stroke();\r\n    });\r\n\r\n  }, [data, imgRefs, width, lines]);\r\n\r\n  useEffect(() => {\r\n    const numPlayers = data.length;\r\n    const ladderHeight = 600;\r\n    const stepHeight = ladderHeight / (numPlayers + 3);\r\n\r\n    const newLines = [];\r\n\r\n    for (let i = 0; i < numPlayers + 4; i++) {\r\n      const lineY = Math.min((i + 1) * stepHeight, 580);\r\n      if (Math.random() > 0.5) {\r\n        data.forEach((_, index) => {\r\n          const img = imgRefs.current[index];\r\n          if (img) {\r\n            const imgX = img.offsetLeft + img.width /6 ;\r\n            console.log(imgX)\r\n            newLines.push({ x: imgX , y: lineY });\r\n          }\r\n        });\r\n      }\r\n    }\r\n    console.log(newLines)\r\n    setLines(newLines);\r\n  }, [data, imgRefs]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={width}\r\n      height={600}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}