{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\min\\\\Desktop\\\\\\uD1A0\\uD1A0\\\\front\\\\src\\\\Sadari\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = ({\n  data,\n  imgRefs\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [width, setWidth] = useState(0);\n  const [lines, setLines] = useState([]); //x좌표 \n  const [firstX, setFirstX] = useState(null);\n  const [secondX, setSecondX] = useState(null);\n  useEffect(() => {\n    const updateCanvasSize = () => {\n      const containerWidth = document.querySelector('.contetnt').offsetWidth;\n      setWidth(containerWidth);\n    };\n    window.addEventListener('resize', updateCanvasSize);\n    updateCanvasSize();\n    return () => window.removeEventListener('resize', updateCanvasSize);\n  }, []);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const ladderWidth = canvas.width;\n    const ladderHeight = canvas.height;\n    ctx.clearRect(0, 0, ladderWidth, ladderHeight);\n    ctx.strokeStyle = 'black';\n    ctx.lineWidth = 5;\n    let firstXTemp = null;\n    let secondXTemp = null;\n\n    // 수직선 그리기\n    data.forEach((_, index) => {\n      const img = imgRefs.current[index];\n      if (img) {\n        const imgX = img.offsetLeft + img.width / 6; // 중앙을 기준으로 X 위치 계산\n        if (firstXTemp === null) {\n          firstXTemp = imgX; // 첫 번째 수직선의 X 좌표 저장\n        } else if (secondXTemp === null) {\n          secondXTemp = imgX; // 두 번째 수직선의 X 좌표 저장\n        }\n        ctx.beginPath();\n        ctx.moveTo(imgX, 0);\n        ctx.lineTo(imgX, ladderHeight);\n        ctx.stroke();\n      }\n    });\n    if (firstXTemp !== null && secondXTemp !== null) {\n      setFirstX(firstXTemp);\n      setSecondX(secondXTemp);\n    }\n    const midX = firstX && secondX ? (firstX + secondX) / 2 : null;\n    ctx.strokeStyle = '#000';\n    ctx.lineWidth = 5;\n\n    // 수평선 그리기\n    lines.forEach(line => {\n      ctx.beginPath();\n      if (midX !== null) {\n        ctx.moveTo(line.x, line.y); // 수평선의 시작점은 imgX (line.x)\n        ctx.lineTo(midX, line.y); // 수평선의 끝점은 midX\n      }\n      ctx.stroke();\n    });\n  }, [data, imgRefs, width, lines]);\n  useEffect(() => {\n    const numPlayers = data.length;\n    const ladderHeight = 600;\n    const stepHeight = ladderHeight / (numPlayers + 3);\n    const newLines = [];\n    for (let i = 0; i < numPlayers + 4; i++) {\n      const lineY = Math.min((i + 1) * stepHeight, 580);\n      if (Math.random() > 0.5) {\n        data.forEach((_, index) => {\n          const img = imgRefs.current[index];\n          if (img) {\n            const imgX = img.offsetLeft + img.width / 6; // 중앙을 기준으로 X 위치 계산\n            const midX = (firstX + secondX) / 2;\n            newLines.push({\n              x: imgX,\n              y: lineY,\n              midX\n            });\n          }\n        });\n      }\n    }\n    setLines(newLines);\n  }, [data, imgRefs, firstX, secondX]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: 600\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"BHwBTQvk+l3zwuU2+cfjwyMrMNE=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Canvas","data","imgRefs","_s","canvasRef","width","setWidth","lines","setLines","firstX","setFirstX","secondX","setSecondX","updateCanvasSize","containerWidth","document","querySelector","offsetWidth","window","addEventListener","removeEventListener","canvas","current","ctx","getContext","ladderWidth","ladderHeight","height","clearRect","strokeStyle","lineWidth","firstXTemp","secondXTemp","forEach","_","index","img","imgX","offsetLeft","beginPath","moveTo","lineTo","stroke","midX","line","x","y","numPlayers","length","stepHeight","newLines","i","lineY","Math","min","random","push","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/min/Desktop/토토/front/src/Sadari/Canvas.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst Canvas = ({ data, imgRefs }) => {\r\n  const canvasRef = useRef(null);\r\n  const [width, setWidth] = useState(0);\r\n  const [lines, setLines] = useState([]);//x좌표 \r\n  const [firstX, setFirstX] = useState(null);\r\n  const [secondX, setSecondX] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const updateCanvasSize = () => {\r\n      const containerWidth = document.querySelector('.contetnt').offsetWidth;\r\n      setWidth(containerWidth);\r\n    };\r\n\r\n    window.addEventListener('resize', updateCanvasSize);\r\n    updateCanvasSize();\r\n\r\n    return () => window.removeEventListener('resize', updateCanvasSize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    const ladderWidth = canvas.width;\r\n    const ladderHeight = canvas.height;\r\n  \r\n\r\n    ctx.clearRect(0, 0, ladderWidth, ladderHeight);\r\n\r\n    ctx.strokeStyle = 'black';\r\n    ctx.lineWidth = 5;\r\n\r\n    let firstXTemp = null;\r\n    let secondXTemp = null;\r\n\r\n    // 수직선 그리기\r\n    data.forEach((_, index) => {\r\n      const img = imgRefs.current[index];\r\n      if (img) {\r\n        const imgX = img.offsetLeft + img.width / 6; // 중앙을 기준으로 X 위치 계산\r\n        if (firstXTemp === null) {\r\n          firstXTemp = imgX; // 첫 번째 수직선의 X 좌표 저장\r\n        } else if (secondXTemp === null) {\r\n          secondXTemp = imgX; // 두 번째 수직선의 X 좌표 저장\r\n        }\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(imgX, 0);\r\n        ctx.lineTo(imgX, ladderHeight);\r\n        ctx.stroke();\r\n      }\r\n    });\r\n\r\n    if (firstXTemp !== null && secondXTemp !== null) {\r\n      setFirstX(firstXTemp);\r\n      setSecondX(secondXTemp);\r\n    }\r\n\r\n    const midX = (firstX && secondX) ? (firstX + secondX) / 2 : null;\r\n\r\n    ctx.strokeStyle = '#000';\r\n    ctx.lineWidth = 5;\r\n\r\n    // 수평선 그리기\r\n    lines.forEach((line) => {\r\n      ctx.beginPath();\r\n      if (midX !== null) {\r\n        ctx.moveTo(line.x, line.y); // 수평선의 시작점은 imgX (line.x)\r\n        ctx.lineTo(midX, line.y);   // 수평선의 끝점은 midX\r\n      }\r\n      ctx.stroke();\r\n    });\r\n  }, [data, imgRefs, width, lines]);\r\n\r\n  useEffect(() => {\r\n    const numPlayers = data.length;\r\n    const ladderHeight = 600;\r\n    const stepHeight = ladderHeight / (numPlayers + 3);\r\n\r\n    const newLines = [];\r\n\r\n    for (let i = 0; i < numPlayers + 4; i++) {\r\n      const lineY = Math.min((i + 1) * stepHeight, 580);\r\n      if (Math.random() > 0.5) {\r\n        data.forEach((_, index) => {\r\n          const img = imgRefs.current[index];\r\n          if (img) {\r\n            const imgX = img.offsetLeft + img.width / 6; // 중앙을 기준으로 X 위치 계산\r\n            const midX = (firstX + secondX) / 2 ; \r\n            newLines.push({ x: imgX, y: lineY, midX });\r\n           \r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    setLines(newLines);\r\n  }, [data, imgRefs, firstX, secondX]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={width}\r\n      height={600}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}