{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\min\\\\Desktop\\\\\\uD1A0\\uD1A0\\\\front\\\\src\\\\Memo\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setMemo } from \"../redux/actions/memoAction\"; // 액션 생성자\nimport * as S from './style';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Memo() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [textValue, setTextValue] = useState(\"\");\n  const dispatch = useDispatch();\n  const memos = useSelector(state => state.memo.memo) || [];\n\n  // 메모 상태 업데이트 함수\n  const updateMemos = newMemos => {\n    dispatch(setMemo(newMemos));\n  };\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleTextChange = e => {\n    setTextValue(e.target.value);\n  };\n  const handleCheckboxChange = index => {\n    const updatedMemos = memos.map((memo, i) => i === index ? {\n      ...memo,\n      checked: !memo.checked\n    } : memo);\n    updateMemos(updatedMemos);\n  };\n  const uploadMemo = async () => {\n    if (inputValue && textValue) {\n      const memoTime = new Date().toLocaleString();\n      const newMemo = {\n        title: inputValue,\n        content: textValue,\n        name: textValue,\n        created_at: memoTime\n      };\n      console.log('Sending data:', JSON.stringify(newMemo));\n      try {\n        const response = await fetch('http://localhost:5000/api/notes', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newMemo)\n        });\n        const responseData = await response.json();\n        console.log('Response data:', responseData);\n        if (response.ok) {\n          setInputValue('');\n          setTextValue('');\n          navigate('/memo');\n          updateMemos([...memos, responseData]);\n        } else {\n          console.error('Failed to upload memo:', responseData.message);\n          alert(responseData.message);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    } else {\n      console.log('err');\n    }\n  };\n  const deleteMemos = async () => {\n    const idsToDelete = memos.filter(memo => memo.checked).map(memo => memo.id);\n    for (const id of idsToDelete) {\n      try {\n        const response = await fetch(`http://localhost:5000/api/notes/${id}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          console.log(`Deleted memo with id ${id}`);\n        } else {\n          console.error(`Failed to delete memo with id ${id}`);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n    updateMemos(memos.filter(memo => !memo.checked)); // 삭제된 메모를 제외한 나머지\n  };\n  useEffect(() => {\n    const fetchMemos = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/notes');\n        const data = await response.json();\n        dispatch(setMemo(data));\n      } catch (error) {\n        console.error('Error fetching memos:', error);\n      }\n    };\n    fetchMemos();\n  }, [dispatch]);\n  console.log(memos);\n  return /*#__PURE__*/_jsxDEV(S.Components, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: location.pathname === '/memo' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: '/memo/input',\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"w-btn w-btn-indigo\",\n                type: \"button\",\n                children: \"memo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"s\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: deleteMemos,\n                className: \"w-btn w-btn-pink\",\n                type: \"button\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"memo\",\n          children: memos.length > 0 ? memos.map((memo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"memo-item\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"front\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    value: inputValue,\n                    checked: !!memo.checked,\n                    onChange: () => handleCheckboxChange(index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 51\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/${memo.title}`,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"m_title\",\n                      children: memo.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 81\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 52\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"m_time\",\n                  children: memo.created_at\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 41\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 37\n          }, this)) : \"No memos available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: '/memo',\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"w-btn w-btn-indigo\",\n                type: \"button\",\n                children: \"back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"a\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"w-btn w-btn-pink\",\n                type: \"button\",\n                onClick: uploadMemo,\n                children: \"upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text_title\",\n            type: \"text\",\n            placeholder: \"Title\",\n            alt: \"Title\",\n            value: inputValue,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"content\",\n            placeholder: \"Content\",\n            value: textValue,\n            onChange: handleTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload\",\n            type: \"button\",\n            onClick: uploadMemo,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n_s(Memo, \"KpFS+NdqK/95lWwZui4kD0VZQL8=\", false, function () {\n  return [useLocation, useNavigate, useDispatch, useSelector];\n});\n_c = Memo;\nexport default Memo;\nvar _c;\n$RefreshReg$(_c, \"Memo\");","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","useNavigate","useSelector","useDispatch","setMemo","S","jsxDEV","_jsxDEV","Fragment","_Fragment","Memo","_s","location","navigate","inputValue","setInputValue","textValue","setTextValue","dispatch","memos","state","memo","updateMemos","newMemos","handleInputChange","e","target","value","handleTextChange","handleCheckboxChange","index","updatedMemos","map","i","checked","uploadMemo","memoTime","Date","toLocaleString","newMemo","title","content","name","created_at","console","log","JSON","stringify","response","fetch","method","headers","body","responseData","json","ok","error","message","alert","deleteMemos","idsToDelete","filter","id","fetchMemos","data","Components","children","className","pathname","to","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","onChange","placeholder","alt","_c","$RefreshReg$"],"sources":["C:/Users/min/Desktop/토토/front/src/Memo/index.js"],"sourcesContent":["import React, { useState ,useEffect} from 'react';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setMemo } from \"../redux/actions/memoAction\"; // 액션 생성자\r\nimport * as S from './style';\r\n\r\nfunction Memo() {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [textValue, setTextValue] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const memos = useSelector(state => state.memo.memo) || [];\r\n\r\n    // 메모 상태 업데이트 함수\r\n    const updateMemos = (newMemos) => {\r\n        dispatch(setMemo(newMemos));\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);  \r\n    };\r\n\r\n    const handleTextChange = (e) => {\r\n        setTextValue(e.target.value);  \r\n    };\r\n\r\n    const handleCheckboxChange = (index) => {\r\n        const updatedMemos = memos.map((memo, i) =>\r\n            i === index ? { ...memo, checked: !memo.checked } : memo\r\n        );\r\n        updateMemos(updatedMemos);\r\n    };\r\n\r\n    const uploadMemo = async () => {\r\n        if (inputValue && textValue) {\r\n            const memoTime = new Date().toLocaleString();\r\n            const newMemo = { title: inputValue, content: textValue, name: textValue, created_at: memoTime };\r\n            console.log('Sending data:', JSON.stringify(newMemo));\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/notes', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(newMemo),\r\n                });\r\n    \r\n                const responseData = await response.json();\r\n                console.log('Response data:', responseData);\r\n    \r\n                if (response.ok) {\r\n                    setInputValue('');\r\n                    setTextValue('');\r\n                    navigate('/memo');\r\n                    \r\n                    updateMemos([...memos, responseData]);\r\n                } else {\r\n                    console.error('Failed to upload memo:', responseData.message);\r\n                    alert(responseData.message);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n        } else {\r\n            console.log('err');\r\n        }\r\n    };\r\n    \r\n    const deleteMemos = async () => {\r\n        const idsToDelete = memos.filter(memo => memo.checked).map(memo => memo.id);\r\n\r\n        for (const id of idsToDelete) {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/api/notes/${id}`, {\r\n                    method: 'DELETE',\r\n                });\r\n\r\n                if (response.ok) {\r\n                    console.log(`Deleted memo with id ${id}`);\r\n                } else {\r\n                    console.error(`Failed to delete memo with id ${id}`);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n        }\r\n\r\n        updateMemos(memos.filter(memo => !memo.checked)); // 삭제된 메모를 제외한 나머지\r\n    };\r\n    useEffect(() => {\r\n        const fetchMemos = async () => {\r\n          try {\r\n            const response = await fetch('http://localhost:5000/api/notes');\r\n            const data = await response.json();\r\n            dispatch(setMemo(data));\r\n          } catch (error) {\r\n            console.error('Error fetching memos:', error);\r\n          }\r\n        };\r\n    \r\n        fetchMemos();\r\n      }, [dispatch]);\r\n      \r\nconsole.log(memos)\r\n    return (\r\n        <S.Components>\r\n            <div className='background'>\r\n                {location.pathname === '/memo' ? (\r\n                    <>\r\n                        <div className='bar'>\r\n                            <div className='left'>\r\n                                <Link to={'/memo/input'}>\r\n                                    <button className=\"w-btn w-btn-indigo\" type=\"button\">\r\n                                        memo\r\n                                    </button>\r\n                                </Link>\r\n                            </div>\r\n                            <div className='right'>\r\n                                <div className='s'>\r\n                                    <button  onClick={deleteMemos} className=\"w-btn w-btn-pink\" type=\"button\">\r\n                                        Delete\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='memo'>\r\n                            {memos.length > 0 ? (\r\n                                memos.map((memo, index) => (\r\n                                    <div key={index} className='memo-item'>\r\n                                        <ul>\r\n                                            <li>\r\n                                                <div className='front'>\r\n                                                  <input \r\n                                                        type='checkbox' \r\n                                                        value={inputValue}\r\n                                                        checked={!!memo.checked} \r\n                                                        onChange={() => handleCheckboxChange(index)} \r\n                                                    />\r\n                                                   <Link to={`/${memo.title}`} ><div className='m_title'>{memo.title}</div></Link>\r\n                                                </div>\r\n                                                <div className='m_time'>{memo.created_at}</div>\r\n                                            </li>\r\n                                        </ul> \r\n                                    </div>\r\n                                ))\r\n                            ) : (\r\n                                \"No memos available\"\r\n                            )}\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div className='bar'>\r\n                            <div className='left'>\r\n                                <Link to={'/memo'}>\r\n                                    <button className=\"w-btn w-btn-indigo\" type=\"button\">\r\n                                        back\r\n                                    </button>\r\n                                </Link>\r\n                            </div>\r\n                            <div className='right'>\r\n                                <div className='a'>\r\n                                    <button className=\"w-btn w-btn-pink\" type=\"button\" onClick={uploadMemo}>\r\n                                        upload\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='title'>\r\n                            <input\r\n                                className='text_title'\r\n                                type='text'\r\n                                placeholder=\"Title\"\r\n                                alt='Title'\r\n                                value={inputValue}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                            <textarea\r\n                                className='content'\r\n                                placeholder='Content'\r\n                                value={textValue}\r\n                                onChange={handleTextChange}\r\n                            />\r\n                            <div className='upload' type='button' onClick={uploadMemo}>\r\n                                Upload\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </S.Components>\r\n    );\r\n}\r\n\r\nexport default Memo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}