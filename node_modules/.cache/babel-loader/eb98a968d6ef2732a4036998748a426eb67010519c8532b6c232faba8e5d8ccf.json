{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\min\\\\Desktop\\\\\\uD1A0\\uD1A0\\\\front\\\\src\\\\Sadari\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = ({\n  data,\n  imgRefs\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [width, setWidth] = useState(window.innerWidth - 100);\n  const [animatedPath, setAnimatedPath] = useState(null);\n  const [imgPositions, setImgPositions] = useState([]);\n  const animationFrameId = useRef(null);\n  useEffect(() => {\n    const updateCanvasSize = () => {\n      setWidth(window.innerWidth - 100);\n    };\n    window.addEventListener('resize', updateCanvasSize);\n    updateCanvasSize();\n    return () => window.removeEventListener('resize', updateCanvasSize);\n  }, []);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const ladderHeight = 600;\n    const ladderY = 50;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const newImgPositions = [];\n    data.forEach((playerData, index) => {\n      const img = imgRefs.current[index];\n      if (img) {\n        const rect = img.getBoundingClientRect();\n        const canvasRect = canvas.getBoundingClientRect();\n        const imgX = rect.left - canvasRect.left + img.width / 2;\n        newImgPositions.push(imgX);\n\n        // Draw vertical line\n        ctx.beginPath();\n        ctx.moveTo(imgX, 0);\n        ctx.lineTo(imgX, ladderHeight);\n        ctx.stroke();\n      }\n    });\n    setImgPositions(newImgPositions);\n\n    // Initialize path with first vertical position\n    if (newImgPositions.length > 1) {\n      const initialX = newImgPositions[0];\n      const targetX = newImgPositions[1];\n      const startY = ladderY;\n      setAnimatedPath({\n        currentX: initialX,\n        targetX: targetX,\n        currentY: startY,\n        direction: 'down',\n        stepSize: 5,\n        horizontalStepSize: 5,\n        endY: ladderHeight,\n        completed: false,\n        horizontalDirection: initialX < targetX ? 'right' : 'left' // Initialize horizontalDirection\n      });\n    }\n  }, [width, data, imgRefs.current]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const animate = () => {\n      if (!animatedPath) return;\n      const {\n        currentX,\n        currentY,\n        direction,\n        stepSize,\n        horizontalStepSize,\n        targetX,\n        endY,\n        horizontalDirection\n      } = animatedPath;\n      ctx.strokeStyle = 'blue';\n      ctx.lineWidth = 3;\n      ctx.beginPath();\n      ctx.moveTo(currentX, currentY);\n      if (direction === 'down') {\n        const nextY = endY;\n        const newY = Math.min(currentY + stepSize, nextY);\n        ctx.lineTo(currentX, newY);\n        ctx.stroke();\n        if (newY >= nextY) {\n          // Change to horizontal direction\n          setAnimatedPath(prev => ({\n            ...prev,\n            direction: 'horizontal',\n            currentY: nextY,\n            targetX: imgPositions[0],\n            // Switch to initial X for horizontal movement\n            horizontalDirection: currentX < targetX ? 'right' : 'left'\n          }));\n        }\n      } else if (direction === 'horizontal') {\n        const newX = horizontalDirection === 'right' ? currentX + horizontalStepSize : currentX - horizontalStepSize;\n        ctx.lineTo(newX, currentY);\n        ctx.stroke();\n        if (horizontalDirection === 'right' && newX >= targetX || horizontalDirection === 'left' && newX <= targetX) {\n          // Change to vertical direction\n          setAnimatedPath(prev => ({\n            ...prev,\n            direction: 'down',\n            currentX: targetX,\n            targetX: prev.targetX === imgPositions[0] ? imgPositions[1] : imgPositions[0],\n            // Switch to next X\n            horizontalDirection: prev.horizontalDirection === 'right' ? 'left' : 'right'\n          }));\n        }\n      }\n      if (!animatedPath.completed) {\n        animationFrameId.current = requestAnimationFrame(animate);\n      } else {\n        cancelAnimationFrame(animationFrameId.current);\n      }\n    };\n    animationFrameId.current = requestAnimationFrame(animate);\n    return () => {\n      cancelAnimationFrame(animationFrameId.current);\n    };\n  }, [animatedPath, imgPositions]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: 600\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"iynBtRb2AYwXpzA2evGaYTSTFnM=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Canvas","data","imgRefs","_s","canvasRef","width","setWidth","window","innerWidth","animatedPath","setAnimatedPath","imgPositions","setImgPositions","animationFrameId","updateCanvasSize","addEventListener","removeEventListener","canvas","current","ctx","getContext","ladderHeight","ladderY","clearRect","height","newImgPositions","forEach","playerData","index","img","rect","getBoundingClientRect","canvasRect","imgX","left","push","beginPath","moveTo","lineTo","stroke","length","initialX","targetX","startY","currentX","currentY","direction","stepSize","horizontalStepSize","endY","completed","horizontalDirection","animate","strokeStyle","lineWidth","nextY","newY","Math","min","prev","newX","requestAnimationFrame","cancelAnimationFrame","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/min/Desktop/토토/front/src/Sadari/Canvas.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst Canvas = ({ data, imgRefs }) => {\r\n  const canvasRef = useRef(null);\r\n  const [width, setWidth] = useState(window.innerWidth - 100);\r\n  const [animatedPath, setAnimatedPath] = useState(null);\r\n  const [imgPositions, setImgPositions] = useState([]);\r\n  const animationFrameId = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const updateCanvasSize = () => {\r\n      setWidth(window.innerWidth - 100);\r\n    };\r\n\r\n    window.addEventListener('resize', updateCanvasSize);\r\n    updateCanvasSize();\r\n    return () => window.removeEventListener('resize', updateCanvasSize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    const ladderHeight = 600;\r\n    const ladderY = 50;\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    const newImgPositions = [];\r\n    data.forEach((playerData, index) => {\r\n      const img = imgRefs.current[index];\r\n      if (img) {\r\n        const rect = img.getBoundingClientRect();\r\n        const canvasRect = canvas.getBoundingClientRect();\r\n        const imgX = rect.left - canvasRect.left + img.width / 2;\r\n        newImgPositions.push(imgX);\r\n\r\n        // Draw vertical line\r\n        ctx.beginPath();\r\n        ctx.moveTo(imgX, 0);\r\n        ctx.lineTo(imgX, ladderHeight);\r\n        ctx.stroke();\r\n      }\r\n    });\r\n\r\n    setImgPositions(newImgPositions);\r\n\r\n    // Initialize path with first vertical position\r\n    if (newImgPositions.length > 1) {\r\n      const initialX = newImgPositions[0];\r\n      const targetX = newImgPositions[1];\r\n      const startY = ladderY;\r\n      setAnimatedPath({\r\n        currentX: initialX,\r\n        targetX: targetX,\r\n        currentY: startY,\r\n        direction: 'down',\r\n        stepSize: 5,\r\n        horizontalStepSize: 5,\r\n        endY: ladderHeight,\r\n        completed: false,\r\n        horizontalDirection: initialX < targetX ? 'right' : 'left' // Initialize horizontalDirection\r\n      });\r\n    }\r\n  }, [width, data, imgRefs.current]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    const animate = () => {\r\n      if (!animatedPath) return;\r\n\r\n      const { currentX, currentY, direction, stepSize, horizontalStepSize, targetX, endY, horizontalDirection } = animatedPath;\r\n\r\n      ctx.strokeStyle = 'blue';\r\n      ctx.lineWidth = 3;\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(currentX, currentY);\r\n\r\n      if (direction === 'down') {\r\n        const nextY = endY;\r\n        const newY = Math.min(currentY + stepSize, nextY);\r\n        ctx.lineTo(currentX, newY);\r\n        ctx.stroke();\r\n\r\n        if (newY >= nextY) {\r\n          // Change to horizontal direction\r\n          setAnimatedPath(prev => ({\r\n            ...prev,\r\n            direction: 'horizontal',\r\n            currentY: nextY,\r\n            targetX: imgPositions[0], // Switch to initial X for horizontal movement\r\n            horizontalDirection: currentX < targetX ? 'right' : 'left'\r\n          }));\r\n        }\r\n      } else if (direction === 'horizontal') {\r\n        const newX = (horizontalDirection === 'right') ? currentX + horizontalStepSize : currentX - horizontalStepSize;\r\n        ctx.lineTo(newX, currentY);\r\n        ctx.stroke();\r\n\r\n        if ((horizontalDirection === 'right' && newX >= targetX) || \r\n            (horizontalDirection === 'left' && newX <= targetX)) {\r\n          // Change to vertical direction\r\n          setAnimatedPath(prev => ({\r\n            ...prev,\r\n            direction: 'down',\r\n            currentX: targetX,\r\n            targetX: (prev.targetX === imgPositions[0]) ? imgPositions[1] : imgPositions[0], // Switch to next X\r\n            horizontalDirection: (prev.horizontalDirection === 'right') ? 'left' : 'right'\r\n          }));\r\n        }\r\n      }\r\n\r\n      if (!animatedPath.completed) {\r\n        animationFrameId.current = requestAnimationFrame(animate);\r\n      } else {\r\n        cancelAnimationFrame(animationFrameId.current);\r\n      }\r\n    };\r\n\r\n    animationFrameId.current = requestAnimationFrame(animate);\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId.current);\r\n    };\r\n  }, [animatedPath, imgPositions]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={width}\r\n      height={600}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}