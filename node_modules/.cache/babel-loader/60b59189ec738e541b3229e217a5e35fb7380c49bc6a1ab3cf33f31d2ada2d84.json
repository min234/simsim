{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\min\\\\Desktop\\\\\\uD1A0\\uD1A0\\\\front\\\\src\\\\Sadari\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useSelector } from \"react-redux\";\nimport Canvas from './Canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const imgRefs = useRef([]);\n  const {\n    data\n  } = useSelector(state => state.data);\n  const [texts, setTexts] = useState(data.map(() => '')); // 각 input의 상태를 개별적으로 관리\n\n  const handleInputChange = (index, value) => {\n    const newTexts = [...texts];\n    newTexts[index] = value;\n    setTexts(newTexts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"parent_body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contetnt_1\",\n        children: data.map((imgs, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgs.src,\n            alt: imgs.alt,\n            ref: el => imgRefs.current[index] = el,\n            className: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contetnt\",\n        children: /*#__PURE__*/_jsxDEV(Canvas, {\n          data: data,\n          imgRefs: imgRefs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contetnt_1\",\n        children: data.map((imgs, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: texts[index] // 각 input이 자신의 상태를 가지도록 수정\n            ,\n            onChange: e => handleInputChange(index, e.target.value),\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"Lu47Ax27VizljEPOykqjRE5Kf9s=\", false, function () {\n  return [useSelector];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useRef","useSelector","Canvas","jsxDEV","_jsxDEV","Game","_s","imgRefs","data","state","texts","setTexts","map","handleInputChange","index","value","newTexts","className","children","imgs","src","alt","ref","el","current","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/min/Desktop/토토/front/src/Sadari/Game.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport Canvas from './Canvas';\r\n\r\nfunction Game() {\r\n  const imgRefs = useRef([]);\r\n  const { data } = useSelector((state) => state.data);\r\n  const [texts, setTexts] = useState(data.map(() => ''));  // 각 input의 상태를 개별적으로 관리\r\n\r\n  const handleInputChange = (index, value) => {\r\n    const newTexts = [...texts];\r\n    newTexts[index] = value;\r\n    setTexts(newTexts);\r\n  };\r\n\r\n  return (\r\n    <div className='parent_body'>\r\n      <div className='data_container'>\r\n        <div className='contetnt_1'>\r\n          {data.map((imgs, index) => (\r\n            <div className='item' key={index}>\r\n              <img\r\n                src={imgs.src}\r\n                alt={imgs.alt}\r\n                ref={el => imgRefs.current[index] = el}\r\n                className='image'\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className='contetnt'>\r\n          <Canvas data={data} imgRefs={imgRefs} />\r\n        </div>\r\n\r\n        <div className='contetnt_1'>\r\n          {data.map((imgs, index) => (\r\n            <div className='item' key={index}>\r\n              <input\r\n                type='text'\r\n                value={texts[index]} // 각 input이 자신의 상태를 가지도록 수정\r\n                onChange={(e) => handleInputChange(index, e.target.value)}\r\n                className='input'\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}