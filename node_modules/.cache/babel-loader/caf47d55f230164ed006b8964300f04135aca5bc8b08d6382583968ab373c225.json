{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\min\\\\Desktop\\\\\\uD1A0\\uD1A0\\\\front\\\\src\\\\Sadari\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = ({\n  data,\n  imgRefs\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [canvasWidth, setCanvasWidth] = useState(0); // 초기 너비를 0으로 설정\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const ladderHeight = canvas.height;\n    const numPlayers = data.length;\n    const stepWidth = canvasWidth / (numPlayers + 1);\n\n    // Draw vertical ladder lines and determine first and last X coordinates\n    let firstLineX = null;\n    let lastLineX = null;\n    ctx.clearRect(0, 0, canvasWidth, ladderHeight);\n    for (let i = 0; i <= numPlayers; i++) {\n      const lineX = i * stepWidth;\n      if (i === 0) {\n        firstLineX = lineX;\n      }\n      if (i === numPlayers) {\n        lastLineX = lineX;\n      }\n      ctx.beginPath();\n      ctx.moveTo(lineX, 0); // Start at the top of the canvas\n      ctx.lineTo(lineX, ladderHeight); // End at the bottom of the canvas\n      ctx.strokeStyle = '#000'; // Line color\n      ctx.lineWidth = 2; // Line width\n      ctx.stroke();\n    }\n\n    // Ensure both firstLineX and lastLineX are found\n    if (firstLineX !== null && lastLineX !== null) {\n      const newCanvasWidth = lastLineX + stepWidth; // Calculate new width based on the last line\n      setCanvasWidth(newCanvasWidth); // Update the width state\n    }\n  }, [data]); // Depend only on data, not canvasWidth\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: canvasWidth,\n    height: 400,\n    style: {\n      border: '1px solid #000'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"CC+vHddEJuAlxfy1WSkYqmWWEAw=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Canvas","data","imgRefs","_s","canvasRef","canvasWidth","setCanvasWidth","canvas","current","ctx","getContext","ladderHeight","height","numPlayers","length","stepWidth","firstLineX","lastLineX","clearRect","i","lineX","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","newCanvasWidth","ref","width","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/min/Desktop/토토/front/src/Sadari/Canvas.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nconst Canvas = ({ data, imgRefs }) => {\r\n  const canvasRef = useRef(null);\r\n  const [canvasWidth, setCanvasWidth] = useState(0); // 초기 너비를 0으로 설정\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    const ladderHeight = canvas.height;\r\n    const numPlayers = data.length;\r\n    const stepWidth = canvasWidth / (numPlayers + 1);\r\n\r\n    // Draw vertical ladder lines and determine first and last X coordinates\r\n    let firstLineX = null;\r\n    let lastLineX = null;\r\n\r\n    ctx.clearRect(0, 0, canvasWidth, ladderHeight);\r\n\r\n    for (let i = 0; i <= numPlayers; i++) {\r\n      const lineX = i * stepWidth;\r\n\r\n      if (i === 0) {\r\n        firstLineX = lineX;\r\n      }\r\n      \r\n      if (i === numPlayers) {\r\n        lastLineX = lineX;\r\n      }\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(lineX, 0); // Start at the top of the canvas\r\n      ctx.lineTo(lineX, ladderHeight); // End at the bottom of the canvas\r\n      ctx.strokeStyle = '#000'; // Line color\r\n      ctx.lineWidth = 2; // Line width\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Ensure both firstLineX and lastLineX are found\r\n    if (firstLineX !== null && lastLineX !== null) {\r\n      const newCanvasWidth = lastLineX + stepWidth; // Calculate new width based on the last line\r\n      setCanvasWidth(newCanvasWidth); // Update the width state\r\n    }\r\n\r\n  }, [data]); // Depend only on data, not canvasWidth\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={canvasWidth}\r\n      height={400}\r\n      style={{ border: '1px solid #000' }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,MAAM,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAMC,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEnDD,SAAS,CAAC,MAAM;IACd,MAAMW,MAAM,GAAGH,SAAS,CAACI,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IAEnC,IAAI,CAACD,GAAG,EAAE;IAEV,MAAME,YAAY,GAAGJ,MAAM,CAACK,MAAM;IAClC,MAAMC,UAAU,GAAGZ,IAAI,CAACa,MAAM;IAC9B,MAAMC,SAAS,GAAGV,WAAW,IAAIQ,UAAU,GAAG,CAAC,CAAC;;IAEhD;IACA,IAAIG,UAAU,GAAG,IAAI;IACrB,IAAIC,SAAS,GAAG,IAAI;IAEpBR,GAAG,CAACS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEb,WAAW,EAAEM,YAAY,CAAC;IAE9C,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIN,UAAU,EAAEM,CAAC,EAAE,EAAE;MACpC,MAAMC,KAAK,GAAGD,CAAC,GAAGJ,SAAS;MAE3B,IAAII,CAAC,KAAK,CAAC,EAAE;QACXH,UAAU,GAAGI,KAAK;MACpB;MAEA,IAAID,CAAC,KAAKN,UAAU,EAAE;QACpBI,SAAS,GAAGG,KAAK;MACnB;MAEAX,GAAG,CAACY,SAAS,CAAC,CAAC;MACfZ,GAAG,CAACa,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;MACtBX,GAAG,CAACc,MAAM,CAACH,KAAK,EAAET,YAAY,CAAC,CAAC,CAAC;MACjCF,GAAG,CAACe,WAAW,GAAG,MAAM,CAAC,CAAC;MAC1Bf,GAAG,CAACgB,SAAS,GAAG,CAAC,CAAC,CAAC;MACnBhB,GAAG,CAACiB,MAAM,CAAC,CAAC;IACd;;IAEA;IACA,IAAIV,UAAU,KAAK,IAAI,IAAIC,SAAS,KAAK,IAAI,EAAE;MAC7C,MAAMU,cAAc,GAAGV,SAAS,GAAGF,SAAS,CAAC,CAAC;MAC9CT,cAAc,CAACqB,cAAc,CAAC,CAAC,CAAC;IAClC;EAEF,CAAC,EAAE,CAAC1B,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEZ,oBACEF,OAAA;IACE6B,GAAG,EAAExB,SAAU;IACfyB,KAAK,EAAExB,WAAY;IACnBO,MAAM,EAAE,GAAI;IACZkB,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAiB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEN,CAAC;AAAChC,EAAA,CAvDIH,MAAM;AAAAoC,EAAA,GAANpC,MAAM;AAyDZ,eAAeA,MAAM;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}