{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\min\\\\Desktop\\\\\\uD1A0\\uD1A0\\\\front\\\\src\\\\Sadari\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = ({\n  data,\n  imgRefs\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [width, setWidth] = useState(window.innerWidth - 100);\n  const [paths, setPaths] = useState([]);\n\n  // 화면 크기 변경 시 캔버스 크기 업데이트\n  useEffect(() => {\n    const updateCanvasSize = () => {\n      setWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', updateCanvasSize);\n    updateCanvasSize();\n    return () => window.removeEventListener('resize', updateCanvasSize);\n  }, []);\n\n  // 캔버스에 경로 그리기\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n    const ladderHeight = 600;\n    const ladderY = 50;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const imgPositions = [];\n    data.forEach((playerData, index) => {\n      const img = imgRefs.current[index];\n      if (img) {\n        const rect = img.getBoundingClientRect();\n        const canvasRect = canvas.getBoundingClientRect();\n        const imgX = rect.left - canvasRect.left + img.width / 2;\n        imgPositions.push(imgX);\n        ctx.beginPath();\n        ctx.moveTo(imgX, 0);\n        ctx.lineTo(imgX, ladderHeight);\n        ctx.stroke();\n      }\n    });\n    const minHorizontalLines = data.length - 1;\n    const horizontalLines = minHorizontalLines + Math.ceil(Math.random() * 5);\n    const newPaths = Array.from({\n      length: data.length\n    }, () => []);\n    for (let i = 0; i < horizontalLines; i++) {\n      const x1 = imgPositions[i % imgPositions.length];\n      const x2 = imgPositions[(i + 1) % imgPositions.length];\n      let startY = ladderY + Math.random() * ladderHeight;\n      ctx.beginPath();\n      ctx.moveTo(x1, startY);\n      ctx.lineTo(x2, startY);\n      ctx.stroke();\n      newPaths[imgPositions.indexOf(x1)].push({\n        coord: {\n          startX: x1,\n          endX: x2,\n          y: startY\n        },\n        connectedIndex: {\n          vertical: imgPositions.indexOf(x2)\n        }\n      });\n    }\n    setPaths(newPaths);\n  }, [width, data, imgRefs]);\n\n  // 애니메이션을 위한 useEffect\n  useEffect(() => {\n    const animate = () => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) return;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // 기존 경로 그리기\n      paths.forEach((pathArray, index) => {\n        pathArray.forEach(path => {\n          const {\n            startX,\n            endX,\n            y\n          } = path.coord;\n          ctx.beginPath();\n          ctx.moveTo(startX, y);\n          ctx.lineTo(endX, y);\n          ctx.stroke();\n        });\n      });\n      requestAnimationFrame(animate);\n    };\n    animate();\n  }, [paths]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: 600\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"EoOUCR8nq6jpI3mGDFfK8TTj+r0=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Canvas","data","imgRefs","_s","canvasRef","width","setWidth","window","innerWidth","paths","setPaths","updateCanvasSize","addEventListener","removeEventListener","canvas","current","ctx","getContext","ladderHeight","ladderY","clearRect","height","imgPositions","forEach","playerData","index","img","rect","getBoundingClientRect","canvasRect","imgX","left","push","beginPath","moveTo","lineTo","stroke","minHorizontalLines","length","horizontalLines","Math","ceil","random","newPaths","Array","from","i","x1","x2","startY","indexOf","coord","startX","endX","y","connectedIndex","vertical","animate","pathArray","path","requestAnimationFrame","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/min/Desktop/토토/front/src/Sadari/Canvas.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst Canvas = ({ data, imgRefs }) => {\r\n  const canvasRef = useRef(null);\r\n  const [width, setWidth] = useState(window.innerWidth - 100);\r\n  const [paths, setPaths] = useState([]);\r\n  \r\n  // 화면 크기 변경 시 캔버스 크기 업데이트\r\n  useEffect(() => {\r\n    const updateCanvasSize = () => {\r\n      setWidth(window.innerWidth);\r\n    };\r\n\r\n    window.addEventListener('resize', updateCanvasSize);\r\n    updateCanvasSize();\r\n    return () => window.removeEventListener('resize', updateCanvasSize);\r\n  }, []);\r\n\r\n  // 캔버스에 경로 그리기\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (!ctx) return;\r\n    \r\n    const ladderHeight = 600;\r\n    const ladderY = 50;\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    const imgPositions = [];\r\n    data.forEach((playerData, index) => {\r\n      const img = imgRefs.current[index];\r\n      if (img) {\r\n        const rect = img.getBoundingClientRect();\r\n        const canvasRect = canvas.getBoundingClientRect();\r\n        const imgX = rect.left - canvasRect.left + img.width / 2;\r\n        imgPositions.push(imgX);\r\n        ctx.beginPath();\r\n        ctx.moveTo(imgX, 0);\r\n        ctx.lineTo(imgX, ladderHeight);\r\n        ctx.stroke();\r\n      }\r\n    });\r\n    \r\n    const minHorizontalLines = data.length - 1;\r\n    const horizontalLines = minHorizontalLines + Math.ceil(Math.random() * 5);\r\n\r\n    const newPaths = Array.from({ length: data.length }, () => []);\r\n    for (let i = 0; i < horizontalLines; i++) {\r\n      const x1 = imgPositions[i % imgPositions.length];\r\n      const x2 = imgPositions[(i + 1) % imgPositions.length];\r\n      let startY = ladderY + Math.random() * ladderHeight;\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(x1, startY);\r\n      ctx.lineTo(x2, startY);\r\n      ctx.stroke();\r\n\r\n      newPaths[imgPositions.indexOf(x1)].push({\r\n        coord: { startX: x1, endX: x2, y: startY },\r\n        connectedIndex: { vertical: imgPositions.indexOf(x2) }\r\n      });\r\n    }\r\n\r\n    setPaths(newPaths);\r\n  }, [width, data, imgRefs]);\r\n\r\n  // 애니메이션을 위한 useEffect\r\n  useEffect(() => {\r\n    const animate = () => {\r\n      const canvas = canvasRef.current;\r\n      if (!canvas) return;\r\n\r\n      const ctx = canvas.getContext(\"2d\");\r\n      if (!ctx) return;\r\n      \r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      // 기존 경로 그리기\r\n      paths.forEach((pathArray, index) => {\r\n        pathArray.forEach((path) => {\r\n          const { startX, endX, y } = path.coord;\r\n          ctx.beginPath();\r\n          ctx.moveTo(startX, y);\r\n          ctx.lineTo(endX, y);\r\n          ctx.stroke();\r\n        });\r\n      });\r\n\r\n      requestAnimationFrame(animate);\r\n    };\r\n\r\n    animate();\r\n  }, [paths]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={width}\r\n      height={600}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}