{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\min\\\\Desktop\\\\\\uD1A0\\uD1A0\\\\front\\\\src\\\\Sadari\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = ({\n  data,\n  imgRefs\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [width, setWidth] = useState(window.innerWidth - 100);\n  const [pathArray, setPathArray] = useState([]);\n  useEffect(() => {\n    const updateCanvasSize = () => {\n      setWidth(window.innerWidth - 100);\n    };\n    window.addEventListener('resize', updateCanvasSize);\n    updateCanvasSize();\n    return () => window.removeEventListener('resize', updateCanvasSize);\n  }, []);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n    const ladderHeight = 600;\n    const player = data.length;\n    const ladderY = 50;\n    const ladderX = 100;\n    const minHorizontalLines = player - 1;\n    const columnGap = (width - ladderX) / minHorizontalLines;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Initialize path array\n    const newPathArray = Array.from({\n      length: minHorizontalLines + 1\n    }, () => []);\n    for (let i = 0; i < minHorizontalLines + 1; i++) {\n      const x = ladderX + i * columnGap;\n      const y = ladderY + Math.random() * ladderHeight;\n\n      // Draw horizontal lines\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + columnGap, y);\n      ctx.stroke();\n\n      // Check boundaries\n      if (i < minHorizontalLines) {\n        newPathArray[i].push({\n          coord: {\n            startX: x,\n            endX: x + columnGap,\n            y\n          },\n          connectedIndex: {\n            vertical: i + 1\n          }\n        });\n        newPathArray[i + 1].push({\n          coord: {\n            startX: x + columnGap,\n            endX: x,\n            y\n          },\n          connectedIndex: {\n            vertical: i\n          }\n        });\n      }\n    }\n    newPathArray.forEach(path => path.sort(({\n      coord: {\n        y: ay\n      }\n    }, {\n      coord: {\n        y: by\n      }\n    }) => ay - by));\n    setPathArray(newPathArray);\n  }, [width, data]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: 600\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"4beCUBrCWKnme8U2T1cqpFauU4g=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Canvas","data","imgRefs","_s","canvasRef","width","setWidth","window","innerWidth","pathArray","setPathArray","updateCanvasSize","addEventListener","removeEventListener","canvas","current","ctx","getContext","ladderHeight","player","length","ladderY","ladderX","minHorizontalLines","columnGap","clearRect","height","newPathArray","Array","from","i","x","y","Math","random","beginPath","moveTo","lineTo","stroke","push","coord","startX","endX","connectedIndex","vertical","forEach","path","sort","ay","by","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/min/Desktop/토토/front/src/Sadari/Canvas.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst Canvas = ({ data, imgRefs }) => {\r\n  const canvasRef = useRef(null);\r\n  const [width, setWidth] = useState(window.innerWidth - 100);\r\n  const [pathArray, setPathArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const updateCanvasSize = () => {\r\n      setWidth(window.innerWidth - 100);\r\n    };\r\n\r\n    window.addEventListener('resize', updateCanvasSize);\r\n    updateCanvasSize();\r\n\r\n    return () => window.removeEventListener('resize', updateCanvasSize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (!ctx) return;\r\n\r\n    const ladderHeight = 600;\r\n    const player = data.length;\r\n    const ladderY = 50;\r\n    const ladderX = 100;\r\n    const minHorizontalLines = player - 1;\r\n    const columnGap = (width - ladderX) / minHorizontalLines;\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Initialize path array\r\n    const newPathArray = Array.from({ length: minHorizontalLines + 1 }, () => []);\r\n\r\n    for (let i = 0; i < minHorizontalLines + 1; i++) {\r\n      const x = ladderX + i * columnGap;\r\n      const y = ladderY + Math.random() * ladderHeight;\r\n\r\n      // Draw horizontal lines\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, y);\r\n      ctx.lineTo(x + columnGap, y);\r\n      ctx.stroke();\r\n\r\n      // Check boundaries\r\n      if (i < minHorizontalLines) {\r\n        newPathArray[i].push({\r\n          coord: { startX: x, endX: x + columnGap, y },\r\n          connectedIndex: { vertical: i + 1 },\r\n        });\r\n        newPathArray[i + 1].push({\r\n          coord: { startX: x + columnGap, endX: x, y },\r\n          connectedIndex: { vertical: i },\r\n        });\r\n      }\r\n    }\r\n    newPathArray.forEach(path => path.sort(({ coord: { y: ay } }, { coord: { y: by } }) => ay - by));\r\n\r\n    setPathArray(newPathArray);\r\n\r\n  }, [width, data]);\r\n\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={width}\r\n      height={600}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}