{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\min\\\\Desktop\\\\\\uD1A0\\uD1A0\\\\front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect } from 'react';\nimport Naver from './Navbar/index';\nimport Home from './Home/index';\nimport Memo from './Memo';\nimport Loading from './Loading';\nimport { Routes, Route } from 'react-router-dom';\nimport { setUserDetails, setLoading, setError } from './redux/actions/UserAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Login from './Login';\nimport Members from './members';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    userDetails = [],\n    isLoading,\n    login\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    // 로그인 상태가 true일 때만 실행\n    if (login) {\n      const fetchUserDetails = async () => {\n        const token = localStorage.getItem('token'); // 로컬 스토리지에서 토큰 가져오기\n\n        dispatch(setLoading(true));\n        dispatch(setError(null));\n        try {\n          const response = await fetch('http://localhost:5000/api/protected', {\n            // 사용자 정보를 가져오는 엔드포인트\n            method: 'GET',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          const data = await response.json();\n          if (response.ok) {\n            // 로그인 성공 시 사용자 정보 저장\n            dispatch(setUserDetails(data.user));\n            console.log('User details:', data.user);\n          } else {\n            // 실패 시 에러 처리\n            console.log('Failed to fetch protected data:', data.message);\n            dispatch(setError(data.message || 'Failed to fetch data'));\n          }\n        } catch (err) {\n          console.error('Error fetching protected data:', err);\n          dispatch(setError(err.message || 'An error occurred'));\n        } finally {\n          dispatch(setLoading(false));\n        }\n      };\n      fetchUserDetails(); // 사용자 정보 가져오기 호출\n    }\n  }, [login, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(Naver, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 22\n      }, this) : null, /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/memo/*\",\n          element: /*#__PURE__*/_jsxDEV(Memo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login/members\",\n          element: /*#__PURE__*/_jsxDEV(Members, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"slkQ9hb5XyiS1OiW6p2Q/DhCWQU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Naver","Home","Memo","Loading","Routes","Route","setUserDetails","setLoading","setError","useDispatch","useSelector","Login","Members","jsxDEV","_jsxDEV","App","_s","dispatch","userDetails","isLoading","login","state","user","fetchUserDetails","token","localStorage","getItem","response","fetch","method","headers","data","json","ok","console","log","message","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/min/Desktop/토토/front/src/App.js"],"sourcesContent":["import './App.css';\nimport React ,{useEffect}from 'react';\nimport Naver from './Navbar/index';\nimport Home from './Home/index';\nimport Memo from './Memo';\nimport Loading from './Loading';\nimport { Routes, Route } from 'react-router-dom';\nimport {  setUserDetails,setLoading,setError } from './redux/actions/UserAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Login from './Login';\nimport Members from './members';\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { userDetails =[], isLoading,login } = useSelector(state => state.user) ;\n  useEffect(() => {\n    // 로그인 상태가 true일 때만 실행\n    if (login) {\n      const fetchUserDetails = async () => {\n        const token = localStorage.getItem('token'); // 로컬 스토리지에서 토큰 가져오기\n\n        dispatch(setLoading(true));\n        dispatch(setError(null));\n\n        try {\n          const response = await fetch('http://localhost:5000/api/protected', { // 사용자 정보를 가져오는 엔드포인트\n            method: 'GET',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json',\n            },\n          });\n\n          const data = await response.json();\n          if (response.ok) {\n            // 로그인 성공 시 사용자 정보 저장\n            dispatch(setUserDetails(data.user));\n            console.log('User details:', data.user);\n          } else {\n            // 실패 시 에러 처리\n            console.log('Failed to fetch protected data:', data.message);\n            dispatch(setError(data.message || 'Failed to fetch data'));\n          }\n        } catch (err) {\n          console.error('Error fetching protected data:', err);\n          dispatch(setError(err.message || 'An error occurred'));\n        } finally {\n          dispatch(setLoading(false));\n        }\n      };\n\n      fetchUserDetails(); // 사용자 정보 가져오기 호출\n    }\n  }, [login, dispatch]);\n  \n  return (\n    <div className='header'>\n      <Naver />\n      \n      <div className='body'>\n        \n        {isLoading  ?<Loading/>: null} \n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/memo/*\" element={<Memo />} />\n          <Route path=\"/login\" element={<Login/>}/>\n          <Route path='/login/members' element={<Members/>}/>\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}