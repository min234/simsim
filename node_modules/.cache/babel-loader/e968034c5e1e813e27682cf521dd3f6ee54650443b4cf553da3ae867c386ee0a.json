{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\min\\\\Desktop\\\\\\uD1A0\\uD1A0\\\\front\\\\src\\\\Sadari\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = ({\n  data,\n  imgRefs\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [width, setWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    const updateCanvasSize = () => {\n      setWidth(window.innerWidth); // 화면의 너비에 따라 canvas의 너비를 업데이트\n    };\n    window.addEventListener('resize', updateCanvasSize);\n    return () => window.removeEventListener('resize', updateCanvasSize);\n  }, []);\n  const canvas = canvasRef.current;\n  if (!canvas) return;\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) return;\n  console.log(width);\n  const ladderWidth = width;\n  const ladderHeight = 600;\n  const Player = data.length;\n  const ladderX = 100; //캔버스 좌표계 내부 기본 x값과 y값\n  const ladderY = 50;\n  const minHorizontalLines = Player - 1;\n  const columnGap = ladderWidth / minHorizontalLines;\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  for (let i = 0; i < Player; i++) {\n    const x = ladderX + i * columnGap;\n    ctx.beginPath();\n    ctx.moveTo(x, ladderY);\n    ctx.lineTo(x, ladderY + ladderHeight);\n    ctx.stroke();\n  }\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: 600\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"NXvV6eiGXpBgievL1G1LlqU37Es=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Canvas","data","imgRefs","_s","canvasRef","width","setWidth","window","innerWidth","updateCanvasSize","addEventListener","removeEventListener","canvas","current","ctx","getContext","console","log","ladderWidth","ladderHeight","Player","length","ladderX","ladderY","minHorizontalLines","columnGap","clearRect","height","i","x","beginPath","moveTo","lineTo","stroke","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/min/Desktop/토토/front/src/Sadari/Canvas.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst Canvas = ({ data, imgRefs }) => {\r\n  const canvasRef = useRef(null);\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const updateCanvasSize = () => {\r\n      setWidth(window.innerWidth); // 화면의 너비에 따라 canvas의 너비를 업데이트\r\n    };\r\n\r\n    window.addEventListener('resize', updateCanvasSize);\r\n\r\n    return () => window.removeEventListener('resize', updateCanvasSize);\r\n  }, []);\r\n  const canvas = canvasRef.current;\r\n  if (!canvas) return;\r\n\r\n  const ctx = canvas.getContext(\"2d\");\r\n  if (!ctx) return;\r\n  console.log(width)\r\n  const ladderWidth = width;\r\n  const ladderHeight = 600;\r\n  const Player = data.length;\r\n  const ladderX = 100; //캔버스 좌표계 내부 기본 x값과 y값\r\n  const ladderY = 50;\r\n\r\n  const minHorizontalLines = Player - 1;\r\n  const columnGap = ladderWidth / minHorizontalLines; \r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    for (let i = 0; i < Player; i++) {\r\n      const x = ladderX + i * columnGap;\r\n      ctx.beginPath(); \r\n      ctx.moveTo(x, ladderY); \r\n      ctx.lineTo(x, ladderY + ladderHeight); \r\n      ctx.stroke(); \r\n    }\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={width}\r\n      height={600}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,MAAM,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACY,MAAM,CAACC,UAAU,CAAC;EAErDX,SAAS,CAAC,MAAM;IACd,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;MAC7BH,QAAQ,CAACC,MAAM,CAACC,UAAU,CAAC,CAAC,CAAC;IAC/B,CAAC;IAEDD,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAAED,gBAAgB,CAAC;IAEnD,OAAO,MAAMF,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAEF,gBAAgB,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EACN,MAAMG,MAAM,GAAGR,SAAS,CAACS,OAAO;EAChC,IAAI,CAACD,MAAM,EAAE;EAEb,MAAME,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;EACnC,IAAI,CAACD,GAAG,EAAE;EACVE,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;EAClB,MAAMa,WAAW,GAAGb,KAAK;EACzB,MAAMc,YAAY,GAAG,GAAG;EACxB,MAAMC,MAAM,GAAGnB,IAAI,CAACoB,MAAM;EAC1B,MAAMC,OAAO,GAAG,GAAG,CAAC,CAAC;EACrB,MAAMC,OAAO,GAAG,EAAE;EAElB,MAAMC,kBAAkB,GAAGJ,MAAM,GAAG,CAAC;EACrC,MAAMK,SAAS,GAAGP,WAAW,GAAGM,kBAAkB;EAEhDV,GAAG,CAACY,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEd,MAAM,CAACP,KAAK,EAAEO,MAAM,CAACe,MAAM,CAAC;EAEhD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,MAAM,EAAEQ,CAAC,EAAE,EAAE;IAC/B,MAAMC,CAAC,GAAGP,OAAO,GAAGM,CAAC,GAAGH,SAAS;IACjCX,GAAG,CAACgB,SAAS,CAAC,CAAC;IACfhB,GAAG,CAACiB,MAAM,CAACF,CAAC,EAAEN,OAAO,CAAC;IACtBT,GAAG,CAACkB,MAAM,CAACH,CAAC,EAAEN,OAAO,GAAGJ,YAAY,CAAC;IACrCL,GAAG,CAACmB,MAAM,CAAC,CAAC;EACd;EAEF,oBACElC,OAAA;IACEmC,GAAG,EAAE9B,SAAU;IACfC,KAAK,EAAEA,KAAM;IACbsB,MAAM,EAAE;EAAI;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEN,CAAC;AAACnC,EAAA,CA7CIH,MAAM;AAAAuC,EAAA,GAANvC,MAAM;AA+CZ,eAAeA,MAAM;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}