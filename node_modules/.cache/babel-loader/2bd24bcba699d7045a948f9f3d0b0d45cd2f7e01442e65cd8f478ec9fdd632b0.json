{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\min\\\\Desktop\\\\\\uD1A0\\uD1A0\\\\front\\\\src\\\\Sadari\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasLadder = () => {\n  _s();\n  const {\n    data\n  } = useSelector(state => state.data);\n  const canvasRef = useRef(null);\n  console.log(data);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return; // Ensure the context is available\n\n    const ladderWidth = canvas.width;\n    const ladderHeight = canvas.height;\n    const numPlayers = data.length;\n    const stepHeight = ladderHeight / (numPlayers + 1);\n    const stepWidth = ladderWidth / (numPlayers + 1);\n    const ladderLines = [];\n    console.log(\"Canvas dimensions:\", ladderWidth, ladderHeight);\n    console.log(\"Number of players:\", numPlayers);\n    console.log(\"Step height:\", stepHeight);\n    console.log(\"Step width:\", stepWidth);\n\n    // Generate random horizontal lines\n    for (let i = 0; i < numPlayers - 1; i++) {\n      for (let j = 1; j < numPlayers; j++) {\n        if (Math.random() > 0.5) {\n          // 50% chance to add a horizontal line\n          ladderLines.push({\n            start: {\n              x: j * stepWidth,\n              y: i * stepHeight\n            },\n            end: {\n              x: (j + 1) * stepWidth,\n              y: i * stepHeight\n            }\n          });\n        }\n      }\n    }\n    console.log(\"Generated ladder lines:\", ladderLines);\n\n    // Clear the canvas before drawing\n    ctx.clearRect(0, 0, ladderWidth, ladderHeight);\n    ctx.strokeStyle = '#000';\n    ctx.lineWidth = 2;\n\n    // Draw vertical ladder lines\n    console.log(\"Drawing vertical lines...\");\n    for (let i = 0; i <= numPlayers; i++) {\n      ctx.beginPath();\n      ctx.moveTo(i * stepWidth, 0);\n      ctx.lineTo(i * stepWidth, ladderHeight);\n      ctx.stroke();\n    }\n\n    // Draw horizontal ladder lines\n    console.log(\"Drawing horizontal lines...\");\n    ladderLines.forEach(line => {\n      ctx.beginPath();\n      ctx.moveTo(line.start.x, line.start.y);\n      ctx.lineTo(line.end.x, line.end.y);\n      ctx.stroke();\n    });\n\n    // Draw players\n\n    console.log(\"Drawing players...\");\n    data.forEach((_, index) => {\n      ctx.beginPath();\n      ctx.arc(stepWidth / 2, (index + 1) * stepHeight, 10, 0, Math.PI * 2);\n      data.forEach((player, index) => {\n        ctx.fillText(player.name, (index + 1) * stepWidth, stepHeight / 2);\n      });\n    });\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: 1600,\n    height: 400,\n    style: {\n      border: '1px solid #000'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(CanvasLadder, \"lWGP4V+VgWsaWiPtnkrvjQ/mjnU=\", false, function () {\n  return [useSelector];\n});\n_c = CanvasLadder;\nexport default CanvasLadder;\nvar _c;\n$RefreshReg$(_c, \"CanvasLadder\");","map":{"version":3,"names":["React","useRef","useEffect","useSelector","jsxDEV","_jsxDEV","CanvasLadder","_s","data","state","canvasRef","console","log","canvas","current","ctx","getContext","ladderWidth","width","ladderHeight","height","numPlayers","length","stepHeight","stepWidth","ladderLines","i","j","Math","random","push","start","x","y","end","clearRect","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","forEach","line","_","index","arc","PI","player","fillText","name","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/min/Desktop/토토/front/src/Sadari/Canvas.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst   CanvasLadder = () => {\r\n  const { data } = useSelector((state) => state.data);\r\n  const canvasRef = useRef(null);\r\n  console.log(data)\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx) return; // Ensure the context is available\r\n\r\n    const ladderWidth = canvas.width;\r\n    const ladderHeight = canvas.height;\r\n    const numPlayers = data.length;\r\n    const stepHeight = ladderHeight / (numPlayers + 1);\r\n    const stepWidth = ladderWidth / (numPlayers + 1);\r\n    const ladderLines = [];\r\n    \r\n    console.log(\"Canvas dimensions:\", ladderWidth, ladderHeight);\r\n    console.log(\"Number of players:\", numPlayers);\r\n    console.log(\"Step height:\", stepHeight);\r\n    console.log(\"Step width:\", stepWidth);\r\n\r\n    // Generate random horizontal lines\r\n    for (let i = 0; i < numPlayers - 1; i++) {\r\n      for (let j = 1; j < numPlayers; j++) {\r\n        if (Math.random() > 0.5) { // 50% chance to add a horizontal line\r\n          ladderLines.push({\r\n            start: { x: j * stepWidth, y: i * stepHeight },\r\n            end: { x: (j + 1) * stepWidth, y: i * stepHeight }\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(\"Generated ladder lines:\", ladderLines);\r\n\r\n    // Clear the canvas before drawing\r\n    ctx.clearRect(0, 0, ladderWidth, ladderHeight);\r\n    \r\n    ctx.strokeStyle = '#000';\r\n    ctx.lineWidth = 2;\r\n\r\n    // Draw vertical ladder lines\r\n    console.log(\"Drawing vertical lines...\");\r\n    for (let i = 0; i <= numPlayers; i++) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(i * stepWidth, 0);\r\n      ctx.lineTo(i * stepWidth, ladderHeight);\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Draw horizontal ladder lines\r\n    console.log(\"Drawing horizontal lines...\");\r\n    ladderLines.forEach(line => {\r\n      ctx.beginPath();\r\n      ctx.moveTo(line.start.x, line.start.y);\r\n      ctx.lineTo(line.end.x, line.end.y);\r\n      ctx.stroke();\r\n    });\r\n\r\n    // Draw players\r\n    \r\n    console.log(\"Drawing players...\");\r\n    data.forEach((_, index) => {\r\n      ctx.beginPath();\r\n      ctx.arc(stepWidth / 2, (index + 1) * stepHeight, 10, 0, Math.PI * 2);\r\n      data.forEach((player, index) => {\r\n        ctx.fillText(player.name, (index + 1) * stepWidth, stepHeight / 2);\r\n      })\r\n    });\r\n\r\n  }, [data]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={1600}\r\n      height={400}\r\n      style={{ border: '1px solid #000' }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CanvasLadder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}