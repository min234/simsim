{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\min\\\\Desktop\\\\\\uD1A0\\uD1A0\\\\front\\\\src\\\\Sadari\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = ({\n  data,\n  imgRefs\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [width, setWidth] = useState(window.innerWidth - 100);\n  useEffect(() => {\n    const updateCanvasSize = () => {\n      setWidth(window.innerWidth); // 화면의 너비에 따라 canvas의 너비를 업데이트\n    };\n    window.addEventListener('resize', updateCanvasSize);\n    return () => window.removeEventListener('resize', updateCanvasSize);\n  }, []);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n    const ladderHeight = 600;\n    const player = data.length;\n    const ladderY = 50;\n    const ladderX = 100;\n    const minHorizontalLines = player - 1;\n    const columnGap = width / minHorizontalLines;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const imgPositions = [];\n    data.forEach((playerData, index) => {\n      const img = imgRefs.current[index];\n      console.log(img);\n      if (img) {\n        const rect = img.getBoundingClientRect();\n        const canvasRect = canvas.getBoundingClientRect();\n        const imgX = rect.left - canvasRect.left + img.width / 2;\n        imgPositions.push(imgX);\n        ctx.beginPath();\n        ctx.moveTo(imgX, 0);\n        ctx.lineTo(imgX, ladderHeight);\n        ctx.stroke();\n      }\n    });\n    const horizontalLines = minHorizontalLines + Math.ceil(Math.random() * 10);\n    for (let i = 0; i < horizontalLines; i++) {\n      const x = imgPositions[i % imgPositions.length];\n      let startY = ladderY + Math.random() * ladderHeight;\n      ctx.beginPath();\n      ctx.moveTo(x, startY);\n      ctx.lineTo(x + columnGap, startY);\n      ctx.stroke();\n    }\n  }, [width, data, imgRefs]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: 600\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"xgEUy5r1wxOfEAiChSQW6mafEIA=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Canvas","data","imgRefs","_s","canvasRef","width","setWidth","window","innerWidth","updateCanvasSize","addEventListener","removeEventListener","canvas","current","ctx","getContext","ladderHeight","player","length","ladderY","ladderX","minHorizontalLines","columnGap","clearRect","height","imgPositions","forEach","playerData","index","img","console","log","rect","getBoundingClientRect","canvasRect","imgX","left","push","beginPath","moveTo","lineTo","stroke","horizontalLines","Math","ceil","random","i","x","startY","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/min/Desktop/토토/front/src/Sadari/Canvas.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst Canvas = ({ data, imgRefs }) => {\r\n  const canvasRef = useRef(null);\r\n  const [width, setWidth] = useState(window.innerWidth -100);\r\n  \r\n  useEffect(() => {\r\n    const updateCanvasSize = () => {\r\n      setWidth(window.innerWidth); // 화면의 너비에 따라 canvas의 너비를 업데이트\r\n    };\r\n\r\n    window.addEventListener('resize', updateCanvasSize);\r\n\r\n    return () => window.removeEventListener('resize', updateCanvasSize);\r\n  }, []);\r\n\r\n   useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (!ctx) return;\r\n  \r\n    const ladderHeight = 600;\r\n    const player =data.length\r\n    const ladderY = 50;\r\n    const ladderX = 100;\r\n    const minHorizontalLines = player - 1;\r\n    const columnGap = width / minHorizontalLines;\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    const imgPositions = [];\r\n\r\n    data.forEach((playerData, index) => {\r\n      const img = imgRefs.current[index];\r\n      console.log(img);\r\n      if (img) {\r\n        const rect = img.getBoundingClientRect();\r\n        const canvasRect = canvas.getBoundingClientRect();\r\n      \r\n        const imgX = rect.left - canvasRect.left + img.width / 2;\r\n        imgPositions.push(imgX)\r\n        ctx.beginPath();\r\n        ctx.moveTo(imgX, 0);\r\n        ctx.lineTo(imgX, ladderHeight);\r\n        ctx.stroke();\r\n      }\r\n    });\r\n\r\n   \r\n    const horizontalLines = minHorizontalLines + Math.ceil(Math.random() * 10);\r\n\r\n    for (let i = 0; i < horizontalLines; i++) {\r\n      const x = imgPositions[i % imgPositions.length];\r\n       let startY = ladderY + Math.random() * ladderHeight;\r\n       ctx.beginPath();\r\n       ctx.moveTo(x, startY);\r\n       ctx.lineTo(x + columnGap, startY);\r\n       ctx.stroke();\r\n    }\r\n  }, [width, data, imgRefs]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={width}\r\n      height={600}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}